## ---------------------------------------------------------------------------
## Licensed to the Apache Software Foundation (ASF) under one or more
## contributor license agreements.  See the NOTICE file distributed with
## this work for additional information regarding copyright ownership.
## The ASF licenses this file to You under the Apache License, Version 2.0
## (the "License"); you may not use this file except in compliance with
## the License.  You may obtain a copy of the License at
##
##      http://www.apache.org/licenses/LICENSE-2.0
##
## Unless required by applicable law or agreed to in writing, software
## distributed under the License is distributed on an "AS IS" BASIS,
## WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
## limitations under the License.
## ---------------------------------------------------------------------------

# camel-k: dependency=camel:keycloak

# Global exception handler for authorization failures
# Handles CamelAuthorizationException to return proper HTTP status codes
- onException:
    exception:
      - "org.apache.camel.CamelAuthorizationException"
    handled:
      constant: true
    steps:
      - setHeader:
          name: CamelHttpResponseCode
          constant: 403
      - setHeader:
          name: Content-Type
          constant: application/json
      - setBody:
          simple: |
            {
              "error": "Forbidden",
              "message": "Access denied. ${exception.message}",
              "timestamp": "${date:now:yyyy-MM-dd'T'HH:mm:ss}",
              "status": 403
            }
      - log:
          message: "Authorization failed: ${exception.message}"

# Bean definition for Keycloak security policy
- beans:
  - name: keycloakPolicy
    type: org.apache.camel.component.keycloak.security.KeycloakSecurityPolicy
    properties:
      serverUrl: "{{keycloak.server.url}}"
      realm: "{{keycloak.realm}}"
      clientId: "{{keycloak.client.id}}"
      clientSecret: "{{keycloak.client.secret}}"
      requiredRoles: "admin"

# Public endpoint - no authentication required
- route:
    id: public-api
    from:
      uri: "platform-http:/api/public"
      steps:
        - setBody:
            simple: |
              {
                "message": "This is a public endpoint, no authentication required",
                "timestamp": "${date:now:yyyy-MM-dd'T'HH:mm:ss}"
              }
        - setHeader:
            name: Content-Type
            constant: application/json
        - log:
            message: "Public API called"

# Protected endpoint - requires admin role
- route:
    id: protected-api
    from:
      uri: "platform-http:/api/protected"
      steps:
        - policy:
            ref: keycloakPolicy
        - setBody:
            simple: |
              {
                "message": "This is a protected endpoint, admin role required",
                "timestamp": "${date:now:yyyy-MM-dd'T'HH:mm:ss}"
              }
        - setHeader:
            name: Content-Type
            constant: application/json
        - log:
            message: "Protected API called"
